/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    users: User;
    messageFromGuests: MessageFromGuest;
    messageFieldConfiguration: MessageFieldConfiguration;
    groupPage: GroupPage;
    mediaHero: MediaHero;
    mediaServices: MediaService;
    mediaTech: MediaTech;
    mediaTechnology: MediaTechnology;
    mediaProducts: MediaProduct;
    mediaClients: MediaClient;
    mediaContact: MediaContact;
    mediaAward: MediaAward;
    mediaAbout: MediaAbout;
    mediaVision: MediaVision;
    mediaLeader: MediaLeader;
    mediaTwoColumnLayout: MediaTwoColumnLayout;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    messageFromGuests: MessageFromGuestsSelect<false> | MessageFromGuestsSelect<true>;
    messageFieldConfiguration: MessageFieldConfigurationSelect<false> | MessageFieldConfigurationSelect<true>;
    groupPage: GroupPageSelect<false> | GroupPageSelect<true>;
    mediaHero: MediaHeroSelect<false> | MediaHeroSelect<true>;
    mediaServices: MediaServicesSelect<false> | MediaServicesSelect<true>;
    mediaTech: MediaTechSelect<false> | MediaTechSelect<true>;
    mediaTechnology: MediaTechnologySelect<false> | MediaTechnologySelect<true>;
    mediaProducts: MediaProductsSelect<false> | MediaProductsSelect<true>;
    mediaClients: MediaClientsSelect<false> | MediaClientsSelect<true>;
    mediaContact: MediaContactSelect<false> | MediaContactSelect<true>;
    mediaAward: MediaAwardSelect<false> | MediaAwardSelect<true>;
    mediaAbout: MediaAboutSelect<false> | MediaAboutSelect<true>;
    mediaVision: MediaVisionSelect<false> | MediaVisionSelect<true>;
    mediaLeader: MediaLeaderSelect<false> | MediaLeaderSelect<true>;
    mediaTwoColumnLayout: MediaTwoColumnLayoutSelect<false> | MediaTwoColumnLayoutSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  pageName: string;
  /**
   * Enable if this page will be located at "https:{domain}/" (make sure there is no other page as the default page)
   */
  pageDefault?: boolean | null;
  pageKey?: string | null;
  /**
   * Example: https://{domain}/{Group}/{This Page}
   */
  pageGroup?: (number | null) | GroupPage;
  pageSection?:
    | (
        | HeroSection
        | ServiceSection
        | TechnologySection
        | ProductSection
        | ClientSection
        | ContactSection
        | AwardSection
        | AboutSection
        | VisionSection
        | LeaderSection
        | TwoColumnLayoutSection
        | Technology2Section
        | ListWithIconSection
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "groupPage".
 */
export interface GroupPage {
  id: number;
  groupName: string;
  groupKey?: string | null;
  subGroupFrom?: (number | null) | GroupPage;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero Section".
 */
export interface HeroSection {
  greetingIllustrationLeft: number | MediaHero;
  greetingIllustrationRight: number | MediaHero;
  greetings: {
    hasIncludeImage?: boolean | null;
    imageGreeting?: (number | null) | MediaHero;
    textGreeting: string;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'heroSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaHero".
 */
export interface MediaHero {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Service Section".
 */
export interface ServiceSection {
  sectionServiceTitle: string;
  sectionServiceSubtitle: string;
  serviceLists: {
    serviceListTitle: string;
    serviceListDescription: string;
    serviceListIcon: number | MediaService;
    /**
     * Select the page that explains about this service (make sure the page already exists)
     */
    serviceListPage?: (number | null) | Page;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'serviceSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaServices".
 */
export interface MediaService {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Technology Section".
 */
export interface TechnologySection {
  sectionTechnologyTitle: string;
  sectionTechnologySubtitle: string;
  sectionTechnologyIllustration: number | MediaTechnology;
  technologyLists: {
    technologyName: string;
    technologyIcon: number | MediaTechnology;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'technologySection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaTechnology".
 */
export interface MediaTechnology {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Product Section".
 */
export interface ProductSection {
  sectionProductTitle: string;
  sectionProductSubtitle: string;
  productLists: {
    productTitle: string;
    productDisplay: number | MediaProduct;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'productSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaProducts".
 */
export interface MediaProduct {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Client Section".
 */
export interface ClientSection {
  sectionClientTitle: string;
  clientLists: {
    clientName: string;
    clientLogo: number | MediaClient;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'clientSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaClients".
 */
export interface MediaClient {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Contact Section".
 */
export interface ContactSection {
  sectionContactIllustration: number | MediaContact;
  sectionContactLabel: string;
  sectionContactHeadline: string;
  sectionContactDescription: string;
  fieldContactLists: {
    fieldLabel: number | MessageFieldConfiguration;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'contactSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaContact".
 */
export interface MediaContact {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "messageFieldConfiguration".
 */
export interface MessageFieldConfiguration {
  id: number;
  computedTitle?: string | null;
  /**
   * For show on frontend
   */
  fieldLabel: string;
  fieldName: string;
  fieldPlaceholder?: string | null;
  fieldType: 'text' | 'email' | 'number' | 'textarea' | 'select';
  selectOptions?:
    | {
        /**
         * For show on frontend
         */
        optionLabel: string;
        optionValue: string;
        id?: string | null;
      }[]
    | null;
  /**
   * By enabling styling, can make the current field into 2 input columns in one row
   */
  styling?: boolean | null;
  /**
   * For show on frontend
   */
  parallelFieldLabel?: string | null;
  parallelFieldName?: string | null;
  parallelFieldPlaceholder?: string | null;
  parallelFieldType?: ('text' | 'email' | 'number') | null;
  /**
   * By enabling required, can make the current field mandatory on the frontend.
   */
  required?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Award Section".
 */
export interface AwardSection {
  sectionAwardTitle: string;
  sectionAwardDescription: string;
  AwardLists: {
    awardImage: number | MediaAward;
    awardNomination: string;
    awardTitle: string;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'awardSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaAward".
 */
export interface MediaAward {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "About Section".
 */
export interface AboutSection {
  sectionAboutLogo: number | MediaAbout;
  sectionAboutTitle: string;
  sectionAboutContent: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'aboutSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaAbout".
 */
export interface MediaAbout {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Vision Section".
 */
export interface VisionSection {
  sectionVisionBanner: number | MediaVision;
  sectionVisionTitle: string;
  sectionVisionSubtitle: string;
  /**
   * Add 3 visions
   */
  visionCardLists?:
    | {
        visionCardTitle: string;
        visionCardDescription: string;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'visionSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaVision".
 */
export interface MediaVision {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Leader Section".
 */
export interface LeaderSection {
  sectionLeaderTitle: string;
  leaderProfileLists?:
    | {
        leaderPhotoProfile: number | MediaLeader;
        leaderName: string;
        leaderPosition: string;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'leaderSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaLeader".
 */
export interface MediaLeader {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Two Column Layout Section".
 */
export interface TwoColumnLayoutSection {
  imageLists: {
    twoColumnLayoutImage: number | MediaTwoColumnLayout;
    id?: string | null;
  }[];
  twoColumnLayoutTitle?: string | null;
  twoColumnLayoutSubtitle: string;
  twoColumnLayoutDescription: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  hasButton?: boolean | null;
  buttonText?: string | null;
  buttonIcon?: string | null;
  buttonLink?: (number | null) | Page;
  /**
   * Choose a color for this button
   */
  buttonColor?: string | null;
  /**
   * If select "Right" then the image is on the left and the title, subtitle, description are on the right.
   */
  contentAlign: 'right' | 'left';
  hasBackground?: boolean | null;
  /**
   * Choose a color for this background page
   */
  backgroundColor?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'twoColumnLayoutSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaTwoColumnLayout".
 */
export interface MediaTwoColumnLayout {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Technology 2 Section".
 */
export interface Technology2Section {
  sectionTechnology2Title: string;
  technology2Lists: {
    technologyName: string;
    technologyIcon: number | MediaTechnology;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'technologySection2';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "List With Icon Section".
 */
export interface ListWithIconSection {
  sectionListIconTitle: string;
  /**
   * Choose a color for this background page
   */
  backgroundPageColor?: string | null;
  contentLists: {
    buttonIcon: string;
    contentName: string;
    id?: string | null;
  }[];
  /**
   * Choose a color for this icon
   */
  iconColor?: string | null;
  /**
   * Choose a color for this background icon
   */
  backgroundIconColor?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'listWithIconSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "messageFromGuests".
 */
export interface MessageFromGuest {
  id: number;
  /**
   * This will store guests message based on configured
   */
  messageGuests?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaTech".
 */
export interface MediaTech {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'messageFromGuests';
        value: number | MessageFromGuest;
      } | null)
    | ({
        relationTo: 'messageFieldConfiguration';
        value: number | MessageFieldConfiguration;
      } | null)
    | ({
        relationTo: 'groupPage';
        value: number | GroupPage;
      } | null)
    | ({
        relationTo: 'mediaHero';
        value: number | MediaHero;
      } | null)
    | ({
        relationTo: 'mediaServices';
        value: number | MediaService;
      } | null)
    | ({
        relationTo: 'mediaTech';
        value: number | MediaTech;
      } | null)
    | ({
        relationTo: 'mediaTechnology';
        value: number | MediaTechnology;
      } | null)
    | ({
        relationTo: 'mediaProducts';
        value: number | MediaProduct;
      } | null)
    | ({
        relationTo: 'mediaClients';
        value: number | MediaClient;
      } | null)
    | ({
        relationTo: 'mediaContact';
        value: number | MediaContact;
      } | null)
    | ({
        relationTo: 'mediaAward';
        value: number | MediaAward;
      } | null)
    | ({
        relationTo: 'mediaAbout';
        value: number | MediaAbout;
      } | null)
    | ({
        relationTo: 'mediaVision';
        value: number | MediaVision;
      } | null)
    | ({
        relationTo: 'mediaLeader';
        value: number | MediaLeader;
      } | null)
    | ({
        relationTo: 'mediaTwoColumnLayout';
        value: number | MediaTwoColumnLayout;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  pageName?: T;
  pageDefault?: T;
  pageKey?: T;
  pageGroup?: T;
  pageSection?:
    | T
    | {
        heroSection?: T | HeroSectionSelect<T>;
        serviceSection?: T | ServiceSectionSelect<T>;
        technologySection?: T | TechnologySectionSelect<T>;
        productSection?: T | ProductSectionSelect<T>;
        clientSection?: T | ClientSectionSelect<T>;
        contactSection?: T | ContactSectionSelect<T>;
        awardSection?: T | AwardSectionSelect<T>;
        aboutSection?: T | AboutSectionSelect<T>;
        visionSection?: T | VisionSectionSelect<T>;
        leaderSection?: T | LeaderSectionSelect<T>;
        twoColumnLayoutSection?: T | TwoColumnLayoutSectionSelect<T>;
        technologySection2?: T | Technology2SectionSelect<T>;
        listWithIconSection?: T | ListWithIconSectionSelect<T>;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero Section_select".
 */
export interface HeroSectionSelect {
  greetingIllustrationLeft?: boolean;
  greetingIllustrationRight?: boolean;
  greetings?:
    | boolean
    | {
        hasIncludeImage?: boolean;
        imageGreeting?: boolean;
        textGreeting?: boolean;
        id?: boolean;
      };
  id?: boolean;
  blockName?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Service Section_select".
 */
export interface ServiceSectionSelect {
  sectionServiceTitle?: boolean;
  sectionServiceSubtitle?: boolean;
  serviceLists?:
    | boolean
    | {
        serviceListTitle?: boolean;
        serviceListDescription?: boolean;
        serviceListIcon?: boolean;
        serviceListPage?: boolean;
        id?: boolean;
      };
  id?: boolean;
  blockName?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Technology Section_select".
 */
export interface TechnologySectionSelect {
  sectionTechnologyTitle?: boolean;
  sectionTechnologySubtitle?: boolean;
  sectionTechnologyIllustration?: boolean;
  technologyLists?:
    | boolean
    | {
        technologyName?: boolean;
        technologyIcon?: boolean;
        id?: boolean;
      };
  id?: boolean;
  blockName?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Product Section_select".
 */
export interface ProductSectionSelect {
  sectionProductTitle?: boolean;
  sectionProductSubtitle?: boolean;
  productLists?:
    | boolean
    | {
        productTitle?: boolean;
        productDisplay?: boolean;
        id?: boolean;
      };
  id?: boolean;
  blockName?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Client Section_select".
 */
export interface ClientSectionSelect {
  sectionClientTitle?: boolean;
  clientLists?:
    | boolean
    | {
        clientName?: boolean;
        clientLogo?: boolean;
        id?: boolean;
      };
  id?: boolean;
  blockName?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Contact Section_select".
 */
export interface ContactSectionSelect {
  sectionContactIllustration?: boolean;
  sectionContactLabel?: boolean;
  sectionContactHeadline?: boolean;
  sectionContactDescription?: boolean;
  fieldContactLists?:
    | boolean
    | {
        fieldLabel?: boolean;
        id?: boolean;
      };
  id?: boolean;
  blockName?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Award Section_select".
 */
export interface AwardSectionSelect {
  sectionAwardTitle?: boolean;
  sectionAwardDescription?: boolean;
  AwardLists?:
    | boolean
    | {
        awardImage?: boolean;
        awardNomination?: boolean;
        awardTitle?: boolean;
        id?: boolean;
      };
  id?: boolean;
  blockName?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "About Section_select".
 */
export interface AboutSectionSelect {
  sectionAboutLogo?: boolean;
  sectionAboutTitle?: boolean;
  sectionAboutContent?: boolean;
  id?: boolean;
  blockName?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Vision Section_select".
 */
export interface VisionSectionSelect {
  sectionVisionBanner?: boolean;
  sectionVisionTitle?: boolean;
  sectionVisionSubtitle?: boolean;
  visionCardLists?:
    | boolean
    | {
        visionCardTitle?: boolean;
        visionCardDescription?: boolean;
        id?: boolean;
      };
  id?: boolean;
  blockName?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Leader Section_select".
 */
export interface LeaderSectionSelect {
  sectionLeaderTitle?: boolean;
  leaderProfileLists?:
    | boolean
    | {
        leaderPhotoProfile?: boolean;
        leaderName?: boolean;
        leaderPosition?: boolean;
        id?: boolean;
      };
  id?: boolean;
  blockName?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Two Column Layout Section_select".
 */
export interface TwoColumnLayoutSectionSelect {
  imageLists?:
    | boolean
    | {
        twoColumnLayoutImage?: boolean;
        id?: boolean;
      };
  twoColumnLayoutTitle?: boolean;
  twoColumnLayoutSubtitle?: boolean;
  twoColumnLayoutDescription?: boolean;
  hasButton?: boolean;
  buttonText?: boolean;
  buttonIcon?: boolean;
  buttonLink?: boolean;
  buttonColor?: boolean;
  contentAlign?: boolean;
  hasBackground?: boolean;
  backgroundColor?: boolean;
  id?: boolean;
  blockName?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Technology 2 Section_select".
 */
export interface Technology2SectionSelect {
  sectionTechnology2Title?: boolean;
  technology2Lists?:
    | boolean
    | {
        technologyName?: boolean;
        technologyIcon?: boolean;
        id?: boolean;
      };
  id?: boolean;
  blockName?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "List With Icon Section_select".
 */
export interface ListWithIconSectionSelect {
  sectionListIconTitle?: boolean;
  backgroundPageColor?: boolean;
  contentLists?:
    | boolean
    | {
        buttonIcon?: boolean;
        contentName?: boolean;
        id?: boolean;
      };
  iconColor?: boolean;
  backgroundIconColor?: boolean;
  id?: boolean;
  blockName?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "messageFromGuests_select".
 */
export interface MessageFromGuestsSelect<T extends boolean = true> {
  messageGuests?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "messageFieldConfiguration_select".
 */
export interface MessageFieldConfigurationSelect<T extends boolean = true> {
  computedTitle?: T;
  fieldLabel?: T;
  fieldName?: T;
  fieldPlaceholder?: T;
  fieldType?: T;
  selectOptions?:
    | T
    | {
        optionLabel?: T;
        optionValue?: T;
        id?: T;
      };
  styling?: T;
  parallelFieldLabel?: T;
  parallelFieldName?: T;
  parallelFieldPlaceholder?: T;
  parallelFieldType?: T;
  required?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "groupPage_select".
 */
export interface GroupPageSelect<T extends boolean = true> {
  groupName?: T;
  groupKey?: T;
  subGroupFrom?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaHero_select".
 */
export interface MediaHeroSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaServices_select".
 */
export interface MediaServicesSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaTech_select".
 */
export interface MediaTechSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaTechnology_select".
 */
export interface MediaTechnologySelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaProducts_select".
 */
export interface MediaProductsSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaClients_select".
 */
export interface MediaClientsSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaContact_select".
 */
export interface MediaContactSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaAward_select".
 */
export interface MediaAwardSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaAbout_select".
 */
export interface MediaAboutSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaVision_select".
 */
export interface MediaVisionSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaLeader_select".
 */
export interface MediaLeaderSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaTwoColumnLayout_select".
 */
export interface MediaTwoColumnLayoutSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}
/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    users: User;
    messageFromGuests: MessageFromGuest;
    messageFieldConfiguration: MessageFieldConfiguration;
    mediaHero: MediaHero;
    mediaServices: MediaService;
    mediaTech: MediaTech;
    mediaTechnology: MediaTechnology;
    mediaProducts: MediaProduct;
    mediaClients: MediaClient;
    servicesSection: ServicesSection;
    techsSection: TechsSection;
    productsSection: ProductsSection;
    clientsSection: ClientsSection;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    messageFromGuests: MessageFromGuestsSelect<false> | MessageFromGuestsSelect<true>;
    messageFieldConfiguration: MessageFieldConfigurationSelect<false> | MessageFieldConfigurationSelect<true>;
    mediaHero: MediaHeroSelect<false> | MediaHeroSelect<true>;
    mediaServices: MediaServicesSelect<false> | MediaServicesSelect<true>;
    mediaTech: MediaTechSelect<false> | MediaTechSelect<true>;
    mediaTechnology: MediaTechnologySelect<false> | MediaTechnologySelect<true>;
    mediaProducts: MediaProductsSelect<false> | MediaProductsSelect<true>;
    mediaClients: MediaClientsSelect<false> | MediaClientsSelect<true>;
    servicesSection: ServicesSectionSelect<false> | ServicesSectionSelect<true>;
    techsSection: TechsSectionSelect<false> | TechsSectionSelect<true>;
    productsSection: ProductsSectionSelect<false> | ProductsSectionSelect<true>;
    clientsSection: ClientsSectionSelect<false> | ClientsSectionSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  pageName: string;
  /**
   * Enable if this page will be located at "https:{domain}/" (make sure there is no other page as the default page)
   */
  pageDefault: boolean;
  pageKey?: string | null;
  pageSection?: (HeroSection | ServiceSection | ProductSection | ClientSection | ContactSection)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero Section".
 */
export interface HeroSection {
  greetingIllustrationLeft: number | MediaHero;
  greetingIllustrationRight: number | MediaHero;
  greetings: {
    hasIncludeImage?: boolean | null;
    imageGreeting?: (number | null) | MediaHero;
    textGreeting: string;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'heroSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaHero".
 */
export interface MediaHero {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Service Section".
 */
export interface ServiceSection {
  sectionTechnologyTitle: string;
  sectionTechnologySubtitle: string;
  sectionTechnologyIllustration: number | MediaTechnology;
  technologyLists: {
    technologyName: string;
    technologyIcon: number | MediaTechnology;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'technologySection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaTechnology".
 */
export interface MediaTechnology {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Product Section".
 */
export interface ProductSection {
  sectionProductTitle: string;
  sectionProductSubtitle: string;
  productLists: {
    productTitle: string;
    productDisplay: number | MediaProduct;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'productSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaProducts".
 */
export interface MediaProduct {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Client Section".
 */
export interface ClientSection {
  sectionClientTitle: string;
  clientLists: {
    clientName: string;
    clientLogo: number | MediaClient;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'clientSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaClients".
 */
export interface MediaClient {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Contact Section".
 */
export interface ContactSection {
  sectionContactLabel: string;
  sectionContactHeadline: string;
  sectionContactDescription: string;
  fieldContactLists: {
    fieldLabel: number | MessageFieldConfiguration;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'contactSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "messageFieldConfiguration".
 */
export interface MessageFieldConfiguration {
  id: number;
  computedTitle?: string | null;
  /**
   * For show on frontend
   */
  fieldLabel: string;
  fieldName: string;
  fieldPlaceholder?: string | null;
  fieldType: 'text' | 'email' | 'number' | 'textarea' | 'select';
  selectOptions?:
    | {
        /**
         * For show on frontend
         */
        optionLabel: string;
        optionValue: string;
        id?: string | null;
      }[]
    | null;
  /**
   * By enabling styling, can make the current field into 2 input columns in one row
   */
  styling?: boolean | null;
  /**
   * For show on frontend
   */
  parallelFieldLabel?: string | null;
  parallelFieldName?: string | null;
  parallelFieldPlaceholder?: string | null;
  parallelFieldType?: ('text' | 'email' | 'number') | null;
  /**
   * By enabling required, can make the current field mandatory on the frontend.
   */
  required?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "messageFromGuests".
 */
export interface MessageFromGuest {
  id: number;
  /**
   * This will store guests message based on configured
   */
  messageGuests?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaServices".
 */
export interface MediaService {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaTech".
 */
export interface MediaTech {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "servicesSection".
 */
export interface ServicesSection {
  id: number;
  /**
   * Title for the Data Andalan Utama service
   */
  title: string;
  /**
   * Description for the Data Andalan Utama service
   */
  description: string;
  /**
   * Static URL for the Data Andalan Utama service page
   */
  url: string;
  /**
   * Icon for the service
   */
  icon: number | MediaService;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "techsSection".
 */
export interface TechsSection {
  id: number;
  /**
   * Name of the technology used
   */
  techName: string;
  /**
   * Technology icon used
   */
  techIcon: number | MediaTech;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "productsSection".
 */
export interface ProductsSection {
  id: number;
  /**
   * Title for the Product Name
   */
  productTitle: string;
  /**
   * Image preview product
   */
  productImage: number | MediaProduct;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "clientsSection".
 */
export interface ClientsSection {
  id: number;
  /**
   * Client's name
   */
  clientName: string;
  /**
   * Client's logo
   */
  clientLogo: number | MediaClient;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'messageFromGuests';
        value: number | MessageFromGuest;
      } | null)
    | ({
        relationTo: 'messageFieldConfiguration';
        value: number | MessageFieldConfiguration;
      } | null)
    | ({
        relationTo: 'mediaHero';
        value: number | MediaHero;
      } | null)
    | ({
        relationTo: 'mediaServices';
        value: number | MediaService;
      } | null)
    | ({
        relationTo: 'mediaTech';
        value: number | MediaTech;
      } | null)
    | ({
        relationTo: 'mediaTechnology';
        value: number | MediaTechnology;
      } | null)
    | ({
        relationTo: 'mediaProducts';
        value: number | MediaProduct;
      } | null)
    | ({
        relationTo: 'mediaClients';
        value: number | MediaClient;
      } | null)
    | ({
        relationTo: 'servicesSection';
        value: number | ServicesSection;
      } | null)
    | ({
        relationTo: 'techsSection';
        value: number | TechsSection;
      } | null)
    | ({
        relationTo: 'productsSection';
        value: number | ProductsSection;
      } | null)
    | ({
        relationTo: 'clientsSection';
        value: number | ClientsSection;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  pageName?: T;
  pageDefault?: T;
  pageKey?: T;
  pageSection?:
    | T
    | {
        heroSection?: T | HeroSectionSelect<T>;
        serviceSection?: T | ServiceSectionSelect<T>;
        technologySection?: T | ServiceSectionSelect<T>;
        productSection?: T | ProductSectionSelect<T>;
        clientSection?: T | ClientSectionSelect<T>;
        contactSection?: T | ContactSectionSelect<T>;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero Section_select".
 */
export interface HeroSectionSelect {
  greetingIllustrationLeft?: boolean;
  greetingIllustrationRight?: boolean;
  greetings?:
    | boolean
    | {
        hasIncludeImage?: boolean;
        imageGreeting?: boolean;
        textGreeting?: boolean;
        id?: boolean;
      };
  id?: boolean;
  blockName?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Service Section_select".
 */
export interface ServiceSectionSelect {
  sectionTechnologyTitle?: boolean;
  sectionTechnologySubtitle?: boolean;
  sectionTechnologyIllustration?: boolean;
  technologyLists?:
    | boolean
    | {
        technologyName?: boolean;
        technologyIcon?: boolean;
        id?: boolean;
      };
  id?: boolean;
  blockName?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Product Section_select".
 */
export interface ProductSectionSelect {
  sectionProductTitle?: boolean;
  sectionProductSubtitle?: boolean;
  productLists?:
    | boolean
    | {
        productTitle?: boolean;
        productDisplay?: boolean;
        id?: boolean;
      };
  id?: boolean;
  blockName?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Client Section_select".
 */
export interface ClientSectionSelect {
  sectionClientTitle?: boolean;
  clientLists?:
    | boolean
    | {
        clientName?: boolean;
        clientLogo?: boolean;
        id?: boolean;
      };
  id?: boolean;
  blockName?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Contact Section_select".
 */
export interface ContactSectionSelect {
  sectionContactLabel?: boolean;
  sectionContactHeadline?: boolean;
  sectionContactDescription?: boolean;
  fieldContactLists?:
    | boolean
    | {
        fieldLabel?: boolean;
        id?: boolean;
      };
  id?: boolean;
  blockName?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "messageFromGuests_select".
 */
export interface MessageFromGuestsSelect<T extends boolean = true> {
  messageGuests?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "messageFieldConfiguration_select".
 */
export interface MessageFieldConfigurationSelect<T extends boolean = true> {
  computedTitle?: T;
  fieldLabel?: T;
  fieldName?: T;
  fieldPlaceholder?: T;
  fieldType?: T;
  selectOptions?:
    | T
    | {
        optionLabel?: T;
        optionValue?: T;
        id?: T;
      };
  styling?: T;
  parallelFieldLabel?: T;
  parallelFieldName?: T;
  parallelFieldPlaceholder?: T;
  parallelFieldType?: T;
  required?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaHero_select".
 */
export interface MediaHeroSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaServices_select".
 */
export interface MediaServicesSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaTech_select".
 */
export interface MediaTechSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaTechnology_select".
 */
export interface MediaTechnologySelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaProducts_select".
 */
export interface MediaProductsSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaClients_select".
 */
export interface MediaClientsSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "servicesSection_select".
 */
export interface ServicesSectionSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  url?: T;
  icon?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "techsSection_select".
 */
export interface TechsSectionSelect<T extends boolean = true> {
  techName?: T;
  techIcon?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "productsSection_select".
 */
export interface ProductsSectionSelect<T extends boolean = true> {
  productTitle?: T;
  productImage?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "clientsSection_select".
 */
export interface ClientsSectionSelect<T extends boolean = true> {
  clientName?: T;
  clientLogo?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}